#!/usr/bin/env perl

use 5.010;
use strict;
use warnings;

use Perinci::CmdLine 1.04;

# DATE
# VERSION

our %SPEC;
$SPEC{pmedit} = {
    v => 1.1,
    summary => 'Launch editor for Perl module source code',
    args => {
        module => {
            schema => 'str*',
            req => 1,
            pos => 0,
            completion => sub {
                require Complete::Module;
                require Complete::Util;
                my %args = @_;
                Complete::Util::mimic_shell_dir_completion(
                    completion => Complete::Module::complete_module(
                        word      => $args{word},
                        find_pmc  => 0,
                        find_pod  => 0,
                        separator => '/',
                        ci        => 1,
                    )
                );
            },
        },
    },
};
sub pmedit {
    require SHARYANTO::Module::Path;
    require String::ShellQuote;

    my %args = @_;
    my $mod = $args{module};
    my $mpath = SHARYANTO::Module::Path::module_path(
        module => $mod, find_pmc=>0, find_pod=>0, find_prefix=>0);
    return [412, "Please set EDITOR first"] unless defined($ENV{EDITOR});
    return [500, "Can't find path for $mod"] unless defined $mpath;

    # array variant doesn't always work because $EDITOR can contain args, e.g.
    # "emacsclient -t".
    my $cmd = "$ENV{EDITOR} ".String::ShellQuote::shell_quote($mpath);
    exec $cmd;
    # [200]; # unreached
}

Perinci::CmdLine->new(url => '/main/pmedit')->run;

# ABSTRACT: Launch editor for Perl module source code
# PODNAME: pmedit

=head1 SYNOPSIS

Basic usage:

 % pmedit Some::Module

To active bash completion:

 % complete -C pmedit pmedit ; # can be put in bash startup file e.g. .bashrc
 % pmedit Some<tab>


=head1 KNOWN ISSUES

Tab completion uses C</> instead of C<::> due issue with how bash treats C<:>
during completion.
