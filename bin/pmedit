#!perl

# DATE
# VERSION

use 5.010;
use strict;
use warnings;

use App::PMUtils;
use Perinci::CmdLine::Any;

our %SPEC;
$SPEC{pmedit} = {
    v => 1.1,
    summary => 'Launch editor for Perl module source code',
    args => {
        module => $App::PMUtils::arg_module_single,
        pod => {
            schema => 'bool',
            default => 0,
        },
    },
};
sub pmedit {
    require Module::Path::More;
    require String::ShellQuote;

    my %args = @_;
    my $mod = $args{module};
    my $mpath = Module::Path::More::module_path(
        module => $mod, find_pmc=>0, find_pod=>$args{pod}, find_prefix=>0);
    return [412, "Please set EDITOR first"] unless defined($ENV{EDITOR});
    return [500, "Can't find path for $mod"] unless defined $mpath;

    # array variant doesn't always work because $EDITOR can contain args, e.g.
    # "emacsclient -t".
    my $cmd = "$ENV{EDITOR} ".String::ShellQuote::shell_quote($mpath);
    exec $cmd;
    # [200]; # unreached
}

Perinci::CmdLine::Any->new(
    url => '/main/pmedit',
)->run;

# ABSTRACT:
# PODNAME:

=head1 SYNOPSIS

Basic usage:

 % pmedit Some::Module
