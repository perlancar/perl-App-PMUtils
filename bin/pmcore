#!perl

# DATE
# VERSION

use 5.010;
use strict;
use warnings;
use Log::Any '$log';

use App::PMUtils;
use Perinci::CmdLine::Any;

our %SPEC;
$SPEC{pmcore} = {
    v => 1.1,
    summary => 'Check if Perl module is in core',
    description => <<'_',



_
    args => {
        module => $App::PMUtils::arg_module_single,
        modver => {
            schema => 'str*',
            pos    => 1,
            # XXX complete using Module::Corelist
        },
    },
    result_naked=>1,
};
sub pmcore {
    require Module::CoreList;

    my %args = @_;
    my $mod = $args{module};
    $mod =~ s/\.pm$//; $mod =~ s!/!::!g; # convenience
    my $ver = $args{modver};

    my $ans;
    if ($ver) {
        $ans = Module::CoreList->first_release($mod, $ver);
    } else {
        $ans = Module::CoreList->first_release($mod);
    }
    my $modv = "$mod".($ver ? " version $ver" : "");

    if ($ans) {
        return "$modv was first released with perl $ans";
    } else {
        return "$modv was not in CORE (or so I think)";
    }
}

Perinci::CmdLine::Any->new(
    url => '/main/pmcore',
)->run;

# ABSTRACT:
# PODNAME:

=head1 SYNOPSIS

 % pmcore MIME::Base64
 MIME::Base64 was first released with perl v5.7.3

 % pmcore Foo
 Foo was not in CORE (or so I think)
